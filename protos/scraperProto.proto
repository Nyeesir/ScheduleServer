syntax = "proto3";
option go_package = "go_schedule_server/protos";

service ScheduleScraper {
  rpc getScheduleTypes(Empty) returns (ScheduleTypes);
  rpc getUpdateTime(Empty) returns (UpdateTime);
  rpc getScheduleList (scheduleTypeRequest) returns (ScheduleListResponse);
  rpc getAvailableScheduleTimeGroups (Empty) returns (AvailableTimeGroups);
  rpc getScheduleFileAsStr (ScheduleFileRequest) returns (ScheduleFileContent);
}

message Empty{}

message ScheduleTypes {
  repeated ScheduleType scheduleTypes = 1;

  message ScheduleType {
    string scheduleTypeName = 1;
    string scheduleTpeId = 2;
  }
}

message UpdateTime {
  float time = 1;
}

message scheduleTypeRequest {
  string type = 1;
}

message ScheduleListResponse {
  repeated ScheduleItem items = 1;
}

message ScheduleItem {
  string name = 1;
  string id = 2;
  string type = 3;
  bool hasSchedule = 4;
  repeated ScheduleItem children = 5;
}

message AvailableTimeGroups {
  repeated TimeGroup period = 1;
  repeated TimeGroup weeks = 2;
}

message TimeGroup {
  string name = 1;
  string id = 2;
}

message ScheduleFileRequest {
  string schedType = 1;
  string schedId = 2;
  string timeGroup = 3;
}

message ScheduleFileContent {
  string content = 1;
}